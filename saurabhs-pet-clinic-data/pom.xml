<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.saurabh</groupId>
    <artifactId>saurabhs-pet-clinic</artifactId>
    <version>0.0.2</version>
  </parent>
  
  <artifactId>saurabhs-pet-clinic-data</artifactId>
  <name>Saurabh's Pet Clinic Data Module</name>
  
  <!-- Spring boot maven plugin by default tries to prepare every project as a executable fat jar, 
  	and hence tries to find a main class in this project as well. But this is our module project and
  	this won't have a main class, this module project should be build as a normal jar, and you need to
  	tell the Spring Boot Maven Plugin to not to repackage this jar. You should only repackage the top
  	level project, parent project. -->
  	
  <properties>
      <spring-boot.repackage.skip>true</spring-boot.repackage.skip>  
  </properties>

  <!-- Spring Boot Maven Plugin gives SpringBoot support in Maven. It lets you package executable jar/war 
  	and runs it 'inplace' outside of any container. If you want to build a normal war and use Tomcat or any
  	application server to put your war in, they you don't need this one. -->
  	
  <build>
	<plugins>
		<plugin>		
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-maven-plugin</artifactId>
		</plugin>
	</plugins>
  </build>
  
  <dependencies>
  		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
  </dependencies>
  
</project>